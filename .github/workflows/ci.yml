name: CI

on:
  push:
    branches:
      - dev
  workflow_dispatch:

jobs:
  # Setup Procursus, other things, and cache
  setup:
    runs-on: macos-latest
    steps:
      - name: Obtain Procursus cache
        uses: actions/cache@v2
        id: procache
        with:
          path: |
            ~/__cache
            /Applications/Xcode_12.4.app/Contents/Developer/Toolchains
          key: ${{ runner.os }}-procursus
      - name: Import all certificates
        env:
          SIGNING_CERTIFICATE_PASSWORD: ${{ secrets.SIGNING_CERTIFICATE_PASSWORD }}
          DEVELOPMENT_CERTIFICATE: ${{ secrets.DEVELOPMENT_CERTIFICATE }}
          DISTRIBUTION_CERTIFICATE: ${{ secrets.DISTRIBUTION_CERTIFICATE }}
          KEYCHAIN_PASSWORD: ${{ secrets.KEYCHAIN_PASSWORD }}
        run: |
          security create-keychain -p "" build.keychain
          security list-keychains -s build.keychain
          security default-keychain -s build.keychain
          security unlock-keychain -p "" build.keychain
          security set-keychain-settings
          security import <(echo $DEVELOPMENT_CERTIFICATE | base64 --decode) \
                          -f pkcs12 \
                          -k build.keychain \
                          -P $SIGNING_CERTIFICATE_PASSWORD \
                          -T /usr/bin/codesign
          security import <(echo $DISTRIBUTION_CERTIFICATE | base64 --decode) \
                          -f pkcs12 \
                          -k build.keychain \
                          -P $SIGNING_CERTIFICATE_PASSWORD \
                          -T /usr/bin/codesign
          security set-key-partition-list -S apple-tool:,apple: -s -k "" build.keychain 
      - name: Setup Procursus Bootstrap (install)
        if: steps.procache.outputs.cache-hit != 'true'
        run: |
          wget https://apt.procurs.us/bootstrap_darwin-amd64.tar.zst https://apt.procurs.us/Toolchain12_5.tzst
          rm -r /Applications/Xcode_12.4.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain
          sudo gtar -xkf ./Toolchain12_5.tzst -C /Applications/Xcode_12.4.app/Contents/Developer/Toolchains
          sudo gtar --preserve-permissions -xkf ./bootstrap_darwin-amd64.tar.zst -C /
          echo '/opt/procursus/sbin:/opt/procursus/bin' >> $GITHUB_PATH
          PATH=/opt/procursus/sbin:/opt/procursus/bin:$PATH sudo /opt/procursus/bin/apt update
          sudo /opt/procursus/bin/apt -V dist-upgrade -y || :
          sudo /opt/procursus/bin/apt -V dist-upgrade -y
          sudo /opt/procursus/bin/apt install ldid -y
      - name: Add Procursus to PATH
        run: |
          echo '/opt/procursus/sbin:/opt/procursus/bin' >> $GITHUB_PATH
      - name: Setup Procursus Bootstrap (cache)
        if: steps.procache.outputs.cache-hit == 'true'
        run: |
          sudo mkdir -p ~/__cache/procursus/var/cache/apt/archives/partial ~/__cache/procursus/var/lib/apt/lists/partial
          sudo rsync -aP ~/__cache/procursus /opt
          sudo /opt/procursus/bin/apt update
          sudo /opt/procursus/bin/apt -V dist-upgrade -y
          sudo /opt/procursus/bin/apt -V dist-upgrade -y
      - name: Copy Procursus to cache location
        run: |
          sudo mkdir -p ~/__cache
          sudo rsync -aP /opt/procursus ~/__cache
          sudo rm -rf ~/__cache/procursus/var/cache/apt/archives/partial ~/__cache/procursus/var/lib/apt/lists/partial ~/__cache/procursus/Library/dpkg/triggers/Lock
  # Checkout the repository code
  checkout:
    needs: setup
    runs-on: macos-latest
    steps:
      - name: Checkout repository code
        uses: actions/checkout@v2
        with:
          submodules: recursive
          token: ${{ secrets.SILEO_PAT }}
  # Build Sileo Nightly for iphoneos-arm
  iphoneos-arm:
    needs: checkout
    runs-on: macos-latest
    steps:
      - name: Build Sileo Nightly (iphoneos-arm)
        run: |
          make clean package NIGHTLY=1 DEBUG=0 ALL_BOOTSTRAPS=1
  # Build Sileo Nightly for darwin-amd64
  darwin-amd64:
    needs: checkout
    runs-on: macos-latest
    steps:
      - name: Build Sileo Nightly (darwin-amd64)
        run: |
          make clean package NIGHTLY=1 DEBUG=0 AUTOMATION=1 SILEO_PLATFORM=darwin-amd64
  # Build Sileo Nightly for darwin-arm64
  darwin-arm64:
    needs: checkout
    runs-on: macos-latest
    steps:
      - name: Build Sileo Nightly (darwin-arm64)
        run: |
          make clean package NIGHTLY=1 DEBUG=0 AUTOMATION=1 SILEO_PLATFORM=darwin-arm64
  # Upload builds to the repo
  upload:
    needs:
      - iphoneos-arm
      - darwin-amd64
      - darwin-arm64
    runs-on: macos-latest
    steps:
      - name: Upload builds to repo
        env:
          token: ${{ secrets.AMY_REPO_SECRET }} 
        run: |
          package1=$(ls -t packages | head -1)
          package2=$(ls -t packages | head -2 | tail -1)
          package3=$(ls -t packages | head -3 | tail -1)
          curl -F deb="@./packages/${package1}" -H "Auth: ${token}" https://api.anamy.gay/private/repo/upload
          curl -F deb="@./packages/${package2}" -H "Auth: ${token}" https://api.anamy.gay/private/repo/upload
          curl -F deb="@./packages/${package3}" -H "Auth: ${token}" https://api.anamy.gay/private/repo/upload
          curl -H "Auth: ${token}" https://api.anamy.gay/private/repo/repackage
  # We do a little trolling...
  wakeup-babe:
    needs: upload
    runs-on: macos-latest
    steps:
      - name: Send message to Sileo Discord Server
        run: |
          curl -H "Content-Type: application/json" -d '{"username": "Nightly Bot", "content": "https://cdn.discordapp.com/attachments/863878431166169100/881714407313375282/image0.jpg"}' "${{ secrets.WEBHOOK }}"
